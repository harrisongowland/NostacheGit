"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.wdm = void 0;
const setup_output_filesystem_1 = require("./setup-output-filesystem");
const ready_1 = require("./ready");
const setup_hooks_1 = require("./setup-hooks");
const get_filename_from_url_1 = require("./get-filename-from-url");
const middleware_1 = require("./middleware");
const noop = () => undefined;
const wdm = (compiler) => {
    const context = {
        state: false,
        stats: undefined,
        callbacks: [],
        compiler,
        watching: undefined,
        logger: compiler.getInfrastructureLogger('webpack-dev-middleware'),
        outputFileSystem: undefined,
    };
    (0, setup_hooks_1.setupHooks)(context);
    (0, setup_output_filesystem_1.setupOutputFileSystem)(context);
    // Start watching
    if (context.compiler.watching) {
        context.watching = context.compiler.watching;
    }
    else {
        const errorHandler = (error) => {
            if (error) {
                context.logger.error(error);
            }
        };
        const watchOptions = context.compiler.options.watchOptions || {};
        context.watching = context.compiler.watch(watchOptions, errorHandler);
    }
    const instance = (0, middleware_1.middleware)(context);
    // @ts-expect-error
    instance.getFilenameFromUrl = (url) => (0, get_filename_from_url_1.getFilenameFromUrl)(context, url);
    // @ts-expect-error
    instance.waitUntilValid = (callback = noop) => {
        (0, ready_1.ready)(context, callback);
    };
    // @ts-expect-error
    instance.invalidate = (callback = noop) => {
        var _a;
        (0, ready_1.ready)(context, callback);
        (_a = context.watching) === null || _a === void 0 ? void 0 : _a.invalidate();
    };
    // @ts-expect-error
    instance.close = (callback = noop) => {
        var _a;
        (_a = context.watching) === null || _a === void 0 ? void 0 : _a.close(callback);
    };
    // @ts-expect-error
    instance.context = context;
    return instance;
};
exports.wdm = wdm;
//# sourceMappingURL=index.js.map