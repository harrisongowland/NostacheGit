"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.downloadFile = void 0;
const http_1 = __importDefault(require("http"));
const https_1 = __importDefault(require("https"));
const fs_1 = require("fs");
const getHttpClient = (url) => {
    if (url.startsWith('http://')) {
        return http_1.default.get;
    }
    if (url.startsWith('https://')) {
        return https_1.default.get;
    }
    throw new Error('URL must start with http:// or https:// for it to be downloaded. Passed: ' +
        url);
};
const downloadFile = (url, to) => {
    return new Promise((resolve, reject) => {
        const writeStream = (0, fs_1.createWriteStream)(to);
        // Listen to 'close' event instead of more
        // concise method to avoid this problem
        // https://github.com/remotion-dev/remotion/issues/384#issuecomment-844398183
        writeStream.on('close', () => resolve());
        writeStream.on('error', (err) => reject(err));
        getHttpClient(url)(url, (res) => {
            res.pipe(writeStream).on('error', (err) => reject(err));
        }).on('error', (err) => {
            return reject(err);
        });
    });
};
exports.downloadFile = downloadFile;
//# sourceMappingURL=download-file.js.map